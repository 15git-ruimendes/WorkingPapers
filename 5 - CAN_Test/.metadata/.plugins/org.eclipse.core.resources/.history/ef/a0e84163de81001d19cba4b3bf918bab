/*
 * CAN_Tables.h
 *
 *  Created on: Nov 23, 2022
 *      Author: RuiMendes
 */

#ifndef SRC_CAN_TABLES_H_
#define SRC_CAN_TABLES_H_

#include "main.h"
#include "3_Supervisor_Routines.h"

// CAN IDs Table

#define MASTER_CARD    	0xA
#define LOGCOM_CARD     0x9
#define DEBUG_CARD      0x8
#define SAC_CARD_1      0x7
#define SAC_CARD_2      0x6
#define SAC_CARD_3      0x5
#define IIS_CARD_1      0x4
#define IIS_CARD_2		0x3
#define GPRO_CARD_1     0x2
#define GPRO_CARD_2     0x1
#define TAS_CARD		0x0

// CAN Tx Commands

#define TX_STOP 		0x8
#define TX_INIT		    0x7
#define TX_START		0x6
#define TX_RETVAL		0x5
#define TX_RETSTT		0x4
#define TX_RETEVNT		0x3
#define TX_ACK          0x2
#define TX_ACTIV		0x1
#define TX_ERROR		0x0

// Card Structure

typedef struct
{
    uint8_t State; 			// General Inner Function State (i.e. Idle, Active, Calibration, Running, Failure)
    uint8_t SuperState; 	// State of the supervision routine (i.e. AOK, Failure CH1, Single PWM, HB Mode)

    uint8_t LastRxSource;	// Last Rx message source (i.e. Master, ComLog, Debug)
    uint8_t LastRxFunction; // Last Rx message function (i.e. Activate, Start ...)

    uint8_t LastMsgTx;		// Last Tx message destination (i.e. Master, ComLog, Debug)
    uint8_t LastMsgTxSize;	// Last Tx message function (i.e. Activate, Start ...)

    uint8_t RxData[8];
    uint8_t TxData[8];

    uint32_t TxMailbox;

    CAN_HandleTypeDef* CANChannel;
    CAN_RxHeaderTypeDef rxHeader;
    CAN_TxHeaderTypeDef txHeader;

    CAN_FilterTypeDef filtCAN;

    TIM_HandleTypeDef* htim;

    uint8_t CardId;
} TypedefCard;


/*
 * Card Specific Structure
 */

typedef struct
{
	TypedefCard Card;

	ADC_HandleTypeDef* hadc;

	float SensValues[6];
	float SensGains[6];
	float SensOffset[6];
	float SensBias[6];
	float SensLimitsU[6];
	float SensLimitsD[6];

	uint32_t SensStates[6];

}TypedefSAC;

/*
 * Parser Functions
 */

/*
 * CAN Identifier Parser
 */

void IdentParser(TypedefSAC *SAC_Card)
{

};

/*
 * CAN Identifier Builder
 */

void IdentBuilder(TypedefSAC *SAC_Card, uint8_t DestCard, uint8_t Function)
{

};

/*
 * CAN Rx Parser
 */

void RxParser(TypedefSAC *SAC_Card)
{
	uint8_t RXBuffer[8];
	uint8_t RXBuffer_Size;
	uint8_t FunctionMode;
	uint8_t MessageCount;
	uint8_t CommandSize;
	uint8_t DataBytes;

	// Check for correct data size
	if (SAC_Card->Card.rxHeader.DLC < 1)
		return;

	// Parse header
	if (SAC_Card->Card.rxHeader.StdId != SAC_Card->Card.CardId)
		return;

	RXBuffer_Size = SAC_Card->Card.rxHeader.DLC;
	memcpy(RXBuffer,SAC_Card->Card.RxData,RXBuffer_Size);

	FunctionMode = 	RXBuffer[1] >> 4;
	CommandSize = 	RXBuffer[1] & 0x0F;

	DataBytes = 	RXBuffer[2] >> 4;
	MessageCount = 	RXBuffer[2] & 0x0F;

	// Main Switch-Case
	switch (FunctionMode)
	{
	case RX_EMERGENCY:
		stopRoutine(SAC_Card,EMERGENCY);
	case RX_STOP:
		stopRoutine(SAC_Card,STOP);
	case RX_INIT:
		initRoutine(SAC_Card,RXBuffer,DataBytes,CommandSize,MessageCount);
	case RX_START:
		startRoutine(SAC_Card,RXBuffer);
	case RX_REVAL:
		recValues(SAC_Card);
	case RX_REEVNT:
		recEvents(SAC_Card);
	case RX_RESTT:
		recStatus(SAC_Card);
	case RX_ACTIVE:
		activRoutine(SAC_Card);
	}
};


/*
 * CAN Tx Parser
 */

void TxParser(TypedefSAC *SAC_Card,uint8_t MessageType,...)
{

};

#endif /* SRC_CAN_TABLES_H_ */
